yr_spec_data <- subset(lfplot, YEAR == yr & GEAR == spec)
for (i in 1:nbins)
{
tot <- 0
for (j in 1:nrow(yr_spec_data))
{
ifelse((yr_spec_data$LENGTH_CM[j]) >= len.cat[i] & (yr_spec_data$LENGTH_CM[j]) < len.cat[i+1],
tot <- tot + yr_spec_data$ytotlen[j],
tot<-tot)
}
count[i] <- tot
}
ysum <- sum(count)
count_freq <- count/ysum
if(is.null(abund_by_yr_spec)){
abund_by_yr_spec <- tibble(YEAR       = yr,
GEAR = spec,
mid.len    = as.numeric(mid.len),
count_freq = as.numeric(count_freq))
} else {
abund_by_yr_spec <- rbind(abund_by_yr_spec,
tibble(YEAR       = yr,
GEAR = spec,
mid.len    = as.numeric(mid.len),
count_freq = as.numeric(count_freq)))
}
}
}
# Generate the abundance densities
ggplot(abund_by_yr_spec, aes(x=mid.len, y=count_freq, fill = GEAR)) +
facet_grid(YEAR ~ GEAR) +
theme(strip.text.x = element_text(size=14),
strip.text.y = element_text(size=14)) +
geom_bar(stat="identity", colour="black", position="dodge") +
scale_fill_manual(values = c("Camera" = "#F26739",
"Fishing" = "#F15B26"),
guide = FALSE) +
theme(axis.text.x = element_text(angle=0, hjust=1, vjust=1.5)) +
labs(x = "Fork Length (cm)", y = "Abundance", family="Helvetica",fontface="bold",size=16) +
theme(axis.line = element_line(colour="black",size=1.0))+
scale_x_continuous(limits = range(len.cat),
breaks = seq(min(len.cat),max(len.cat), bin.width * 2))+
theme(axis.text=element_text(size=12),axis.title=element_text(size=14,face="bold"))
# save the outputs to the working directory
ggsave(paste("Gear Length Frequency.pdf"), width = 11, height = 8.5, units = "in")
ggsave(paste("Gear Length Frequency.png"), width = 11, height = 8.5, units = "in")
# Compute & Plot Species Abundance at Length by gear ------------------------------
ar.data.gear <- rbind(
read.csv("~/Bottomfish/Bottomfish Project/BFISH/BFISH Data/Data Analysis/[R]/BFISH 2020-present Data Analysis/FINAL/BFISH_2016_F_AR data Camera.csv"),
read.csv("~/Bottomfish/Bottomfish Project/BFISH/BFISH Data/Data Analysis/[R]/BFISH 2020-present Data Analysis/FINAL/BFISH_2016_F_AR data Fishing.csv"),
read.csv("~/Bottomfish/Bottomfish Project/BFISH/BFISH Data/Data Analysis/[R]/BFISH 2020-present Data Analysis/FINAL/BFISH_2017_F_AR data Camera.csv"),
read.csv("~/Bottomfish/Bottomfish Project/BFISH/BFISH Data/Data Analysis/[R]/BFISH 2020-present Data Analysis/FINAL/BFISH_2017_F_AR data Fishing.csv"),
read.csv("~/Bottomfish/Bottomfish Project/BFISH/BFISH Data/Data Analysis/[R]/BFISH 2020-present Data Analysis/FINAL/BFISH_2018_F_AR data Camera.csv"),
read.csv("~/Bottomfish/Bottomfish Project/BFISH/BFISH Data/Data Analysis/[R]/BFISH 2020-present Data Analysis/FINAL/BFISH_2018_F_AR data Fishing.csv"),
read.csv("~/Bottomfish/Bottomfish Project/BFISH/BFISH Data/Data Analysis/[R]/BFISH 2020-present Data Analysis/FINAL/BFISH_2019_F_AR data Camera.csv"),
read.csv("~/Bottomfish/Bottomfish Project/BFISH/BFISH Data/Data Analysis/[R]/BFISH 2020-present Data Analysis/FINAL/BFISH_2019_F_AR data Fishing.csv"),
read.csv("~/Bottomfish/Bottomfish Project/BFISH/BFISH Data/Data Analysis/[R]/BFISH 2020-present Data Analysis/FINAL/BFISH_2020_F_AR data Camera.csv"),
read.csv("~/Bottomfish/Bottomfish Project/BFISH/BFISH Data/Data Analysis/[R]/BFISH 2020-present Data Analysis/FINAL/BFISH_2020_F_AR data Fishing.csv"),
read.csv("~/Bottomfish/Bottomfish Project/BFISH/BFISH Data/Data Analysis/[R]/BFISH 2020-present Data Analysis/FINAL/BFISH_2021_F_AR data Camera.csv"),
read.csv("~/Bottomfish/Bottomfish Project/BFISH/BFISH Data/Data Analysis/[R]/BFISH 2020-present Data Analysis/FINAL/BFISH_2021_F_AR data Fishing.csv"),
read.csv("BFISH_2022_F_AR data Camera.csv"),
read.csv("BFISH_2022_F_AR data Fishing.csv")
)
#remove missing length data
ar.data.gear.2 <- subset(ar.data.gear, LENGTH_CM >=0)
## Stratum length-frequency computations
ar.data.gear.lenf <- ddply(ar.data.gear.2, .(GEAR, STRATA_2020, SPECIES_CD, LENGTH_CM), summarize,
sum_len = sum(CPUE))
totnum <- ddply(ar.data.gear.lenf, .(GEAR, STRATA_2020, SPECIES_CD), summarize,
totnum = sum(sum_len))
ar.data.gear.lenf<-merge(ar.data.gear.lenf,totnum, by = c("GEAR", "STRATA_2020", "SPECIES_CD"))
ar.data.gear.lenf$rfrq<-with(ar.data.gear.lenf, ifelse(totnum==0,0,sum_len/totnum))
ar.data.gear.tot <- ddply(ar.data.gear, .(SPECIES_CD, PSU, STRATA_2020, GEAR), summarize,
num = sum(CPUE))
#### Stratified Random Sampling Survey (StRS) Design Computations  ####
# Calculate mean Density (avdns), Variance of Density (svar), Sample Size (n) and Standard Deviation of Density (std)
ar.data.gear.est <- ddply(ar.data.gear.tot, .(SPECIES_CD, STRATA_2020, GEAR), summarize, avdns = mean(num))
# Merge ntot with ar.data.gear.est
ar.data.gear.est<-merge(ar.data.gear.est,psu.count.2020, by="STRATA_2020")
# Stratum-specific Estimates
ar.data.gear.est$yt<-with(ar.data.gear.est,PSU_COUNT*avdns)
ar.data.gear.lenf.2<-merge(ar.data.gear.est,ar.data.gear.lenf, by= c("GEAR", "STRATA_2020", "SPECIES_CD"))
ar.data.gear.lenf.2$ytlen<-ar.data.gear.lenf.2$yt*ar.data.gear.lenf.2$rfrq
ar.data.gear.ytotlen <- ddply(ar.data.gear.lenf.2, .(GEAR, SPECIES_CD, LENGTH_CM), summarize, ytotlen = sum(ytlen))
###############################################
# gcookbook routine to create barplot
ar.data.gear.lfplot<-arrange(ar.data.gear.ytotlen,SPECIES_CD,GEAR,LENGTH_CM,ytotlen)
############################## PLOT PARAMETERS #################################
# Set the species and SPECIES_CDs we want plotted
spec_to_plot  <- c("Camera", "Fishing")
yrs_to_plot   <- unique(ar.data.gear.lfplot$SPECIES_CD)
#set up binning
bin.width <- 5
nbins     <- ceiling(max(ar.data.gear.lfplot$LENGTH_CM) / bin.width)
nobs      <- length(ar.data.gear.lfplot$LENGTH_CM)
len.cat <- matrix(NA, nrow = nbins, ncol = 1)
mid.len <- matrix(NA, nrow = nbins, ncol = 1)
len.cat[1] <- 0
count <- matrix(NA, nrow = nbins, ncol = 1)
tot <- 0
# subset the data
lfplot <- subset(ar.data.gear.lfplot,
GEAR %in% spec_to_plot &
SPECIES_CD %in% yrs_to_plot)
# create the bins and mid.len
for (i in 1:nbins)
{
len.cat[i+1] <- len.cat[i]+bin.width
mid.len[i]<-(len.cat[i+1]+len.cat[i])/2
}
# Let's make a holder for abundance data by yr_species_combo
abund_by_yr_spec <- c()
# Loop through species and SPECIES_CDs to get the counts per yr-species combo
for(spec in spec_to_plot){
for(yr in yrs_to_plot){
yr_spec_data <- subset(lfplot, SPECIES_CD == yr & GEAR == spec)
for (i in 1:nbins)
{
tot <- 0
for (j in 1:nrow(yr_spec_data))
{
ifelse((yr_spec_data$LENGTH_CM[j]) >= len.cat[i] & (yr_spec_data$LENGTH_CM[j]) < len.cat[i+1],
tot <- tot + yr_spec_data$ytotlen[j],
tot<-tot)
}
count[i] <- tot
}
ysum <- sum(count)
count_freq <- count/ysum
if(is.null(abund_by_yr_spec)){
abund_by_yr_spec <- tibble(SPECIES_CD       = yr,
GEAR = spec,
mid.len    = as.numeric(mid.len),
count_freq = as.numeric(count_freq))
} else {
abund_by_yr_spec <- rbind(abund_by_yr_spec,
tibble(SPECIES_CD       = yr,
GEAR = spec,
mid.len    = as.numeric(mid.len),
count_freq = as.numeric(count_freq)))
}
}
}
# Generate the abundance densities
ggplot(abund_by_yr_spec, aes(x=mid.len, y=count_freq, fill = GEAR)) +
facet_grid(SPECIES_CD ~ GEAR) +
theme(strip.text.x = element_text(size=14),
strip.text.y = element_text(size=14)) +
geom_bar(stat="identity", colour="black", position="dodge") +
scale_fill_manual(values = c("Camera" = "#F26739",
"Fishing" = "#F15B26"),
guide = FALSE) +
theme(axis.text.x = element_text(angle=0, hjust=1, vjust=1.5)) +
labs(x = "Fork Length (cm)", y = "Abundance", family="Helvetica",fontface="bold",size=16) +
theme(axis.line = element_line(colour="black",size=1.0))+
scale_x_continuous(limits = range(len.cat),
breaks = seq(min(len.cat),max(len.cat), bin.width * 2))+
theme(axis.text=element_text(size=12),axis.title=element_text(size=14,face="bold"))
# save the outputs to the working directory
ggsave(paste("Gear Length Frequency by Species.pdf"), width = 11, height = 8.5, units = "in")
# merge in the common names to use for plotting
abund_by_yr_spec <- merge(abund_by_yr_spec,
SPECIES_TABLE[, c("COMMON_NAME", "SPECIES_CD")])
# Generate the abundance densities
ggplot(abund_by_yr_spec, aes(x=mid.len, y=count_freq, fill = GEAR)) +
facet_grid(COMMON_NAME ~ GEAR) +
theme(strip.text.x = element_text(size=14),
strip.text.y = element_text(size=14)) +
geom_bar(stat="identity", colour="black", position="dodge") +
scale_fill_manual(values = c("Camera" = "#F26739",
"Fishing" = "#F15B26"),
guide = FALSE) +
theme(axis.text.x = element_text(angle=0, hjust=1, vjust=1.5)) +
labs(x = "Fork Length (cm)", y = "Abundance", family="Helvetica",fontface="bold",size=16) +
theme(axis.line = element_line(colour="black",size=1.0))+
scale_x_continuous(limits = range(len.cat),
breaks = seq(min(len.cat),max(len.cat), bin.width * 2))+
theme(axis.text=element_text(size=12),axis.title=element_text(size=14,face="bold"))
# save the outputs to the working directory
ggsave(paste("Gear Length Frequency by Species.pdf"), width = 11, height = 8.5, units = "in")
#set wd to appropriate Sampling Design directory
setwd("~/Cruises/2023/BFISH_2023_F/Sampling Design")
#set wd to appropriate Sampling Design directory
setwd("~/Cruises/2023/BFISH_2023_F/Sampling Design")
#set BFISH ID
bfish_id.alloc <- "BFISH_2023_F"
grids.psu <- read_excel("BFISH_2023_F allocation table.xlsx",
sheet = "nPSU")
View(grids.psu)
#set wd to appropriate Sampling Design directory
setwd("~/Cruises/2023/BFISH_2023_F/Sampling Design")
#set BFISH ID
bfish_id.alloc <- "BFISH_2023_F"
grids.psu <- read_excel("BFISH_2023_F allocation table.xlsx",
sheet = "nPSU")
View(grids.psu)
#subset domain to include only PSU suitable for allocation
domain.allocation <- subset(domain.init, Allocation == "Y")
#create strata by island variable
domain.allocation$STRATA_2020byISLAND <- paste(domain.allocation$STRATA_2020, domain.allocation$Island, sep = "")
#create sample allocation data frame
sample.allocation <- data.frame()
#loop through the available Strata within domain randomly selecting "nh" rows from <domain> based on "nh" in <allocation>
for(i in 1:length(grids.psu$STRATAbyISLAND)) {
temp <- subset(domain.allocation, domain.allocation$STRATA_2020byISLAND == as.character(grids.psu$STRATAbyISLAND)[i])
sample <- temp[sample(nrow(temp), grids.psu$nh2[i], replace = FALSE),]
sample.allocation <- rbind(sample.allocation,sample)
}
grids <- subset(sample.allocation, select = "PSU")
View(grids)
#write a .csv file with the PSU Grid_IDs for joining in ArcGIS
write.csv(grids, file = paste0(bfish_id.alloc,"_grids_for_Arc.csv"), row.names = F)
#subset domain to include only PSU suitable for allocation
domain.allocation <- subset(domain.input, Allocation == "Y")
#create strata by island variable
domain.allocation$STRATA_2020byISLAND <- paste(domain.allocation$STRATA_2020, domain.allocation$Island, sep = "")
#create sample allocation data frame
sample.allocation <- data.frame()
#loop through the available Strata within domain randomly selecting "nh" rows from <domain> based on "nh" in <allocation>
for(i in 1:length(grids.psu$STRATAbyISLAND)) {
temp <- subset(domain.allocation, domain.allocation$STRATA_2020byISLAND == as.character(grids.psu$STRATAbyISLAND)[i])
sample <- temp[sample(nrow(temp), grids.psu$nh2[i], replace = FALSE),]
sample.allocation <- rbind(sample.allocation,sample)
}
grids <- subset(sample.allocation, select = "PSU")
View(grids)
#write a .csv file with the PSU Grid_IDs for joining in ArcGIS
write.csv(grids, file = paste0(bfish_id.alloc,"_grids_for_Arc.csv"), row.names = F)
grids <- colnames(subset(sample.allocation, select = "PSU"))[1] ="PSU_BFISH_2023"
colnames(grids)[1] ="PSU_BFISH_2023"
View(grids)
colnames(grids)[1] ="PSU_2023"
View(grids)
grids <- subset(sample.allocation, select = "PSU")
colnames(grids)[1] ="PSU_2023"
View(grids)
#write a .csv file with the PSU Grid_IDs for joining in ArcGIS
write.csv(grids, file = paste0(bfish_id.alloc,"_grids_for_Arc.csv"), row.names = F)
NAMES(ar.data.all)
names(ar.data.all)
# read in data tables for current and last 2 years
ar.data.all <- rbind(
read.csv("~/Bottomfish/Bottomfish Project/BFISH/BFISH Data/Data Analysis/[R]/BFISH 2020-present Data Analysis/FINAL/BFISH_2020_F_AR data Both Gears Combined.csv"),
read.csv("~/Bottomfish/Bottomfish Project/BFISH/BFISH Data/Data Analysis/[R]/BFISH 2020-present Data Analysis/FINAL/BFISH_2021_F_AR data Both Gears Combined.csv"),
read.csv("BFISH_2022_F_AR data Both Gears Combined.csv")
)
# Set initial conditions --------------------------------------------------
setwd("~/Bottomfish/Bottomfish Project/BFISH/BFISH Data/Data Analysis/[R]/BFISH 2020-present Data Analysis/WORKING")
# read in data tables for current and last 2 years
ar.data.all <- rbind(
read.csv("~/Bottomfish/Bottomfish Project/BFISH/BFISH Data/Data Analysis/[R]/BFISH 2020-present Data Analysis/FINAL/BFISH_2020_F_AR data Both Gears Combined.csv"),
read.csv("~/Bottomfish/Bottomfish Project/BFISH/BFISH Data/Data Analysis/[R]/BFISH 2020-present Data Analysis/FINAL/BFISH_2021_F_AR data Both Gears Combined.csv"),
read.csv("BFISH_2022_F_AR data Both Gears Combined.csv")
)
names(ar.data.all)
#create dataframe with spp and depth ranges
df.spp_domain <- data.frame(spp = c("PRFI", "ETCA", "ETCO"), common_name = c("Opakapaka", "Ehu", "Onaga"), min_depth = c(80, 110, 180), max_depth = c(260, 380, 360), stringsAsFactors = F)
#add in spp lhab
l.hab <- data.frame(SPECIES_CD = c("APRU", "ETCA", "ETCO", "HYQU", "PRFI", "PRSI", "PRZO"), lhab = c(5.0, 29.0, 27.5, 5.0, 22.5, 21.0, 5.0), stringsAsFactors = F)
ar.data.all <- merge(ar.data.all, l.hab, by = "SPECIES_CD")
names(ar.data.all)
names(l.hab)
names(df.spp_domain)
ar.data.all <- merge(ar.data.all, l.hab, by = c("SPECIES_CD", "common_name"))
# read in data tables for current and last 2 years
ar.data.all <- rbind(
read.csv("~/Bottomfish/Bottomfish Project/BFISH/BFISH Data/Data Analysis/[R]/BFISH 2020-present Data Analysis/FINAL/BFISH_2020_F_AR data Both Gears Combined.csv"),
read.csv("~/Bottomfish/Bottomfish Project/BFISH/BFISH Data/Data Analysis/[R]/BFISH 2020-present Data Analysis/FINAL/BFISH_2021_F_AR data Both Gears Combined.csv"),
read.csv("BFISH_2022_F_AR data Both Gears Combined.csv")
)
#create dataframe with spp and depth ranges
df.spp_domain <- data.frame(spp = c("PRFI", "ETCA", "ETCO"), common_name = c("Opakapaka", "Ehu", "Onaga"), min_depth = c(80, 110, 180), max_depth = c(260, 380, 360), stringsAsFactors = F)
#add in spp lhab
l.hab <- data.frame(SPECIES_CD = c("APRU", "ETCA", "ETCO", "HYQU", "PRFI", "PRSI", "PRZO"), lhab = c(5.0, 29.0, 27.5, 5.0, 22.5, 21.0, 5.0), stringsAsFactors = F)
ar.data.all <- merge(ar.data.all, l.hab, by = "SPECIES_CD")
names(ar.data.all)
View(BFISH_biomass)
names(BFISH_biomass)
cg.7 <- subset(BFISH_biomass, select = c("COMMON_NAME", "SPECIES_CD", "YEAR", "CV_CPUE"))
cg.7 <- subset(BFISH_biomass, select = c("COMMON_NAME", "SPECIES_CD", "YEAR", "CV_CPUE"))
ggplot(data = cg.7, aes(x = as.factor(YEAR), y = z, group = 1, color = COMMON_NAME)) +
geom_hline(linetype = "longdash", yintercept = 0, size = 0.5, color = "black") +
facet_grid(COMMON_NAME ~ ., scales = "free") +
theme_bw() +
geom_line(color = "grey33") +
geom_point(size = 3) +
ylim(-3,3) +
scale_color_manual(values = c("Ehu" = "#F26739",
"Gindai" = "#EF3E24",
"Hapuupuu" = "#680B10",
"Kalekale" = "#A91E23",
"Lehi" = "#D12027",
"Onaga" = "#F15B26",
"Opakapaka" = "#F47B50"),
guide = "none") +
labs(x = "BFISH Survey Year", y = "CV of CPUE") +
theme(axis.text = element_text(size = 9, angle = 90),
axis.title = element_text(size=12,
face = "bold"),
axis.title.y = element_text(margin = margin(r=5)))
library(ggplot2)
cg.7 <- subset(BFISH_biomass, select = c("COMMON_NAME", "SPECIES_CD", "YEAR", "CV_CPUE"))
ggplot(data = cg.7, aes(x = as.factor(YEAR), y = z, group = 1, color = COMMON_NAME)) +
geom_hline(linetype = "longdash", yintercept = 0, size = 0.5, color = "black") +
facet_grid(COMMON_NAME ~ ., scales = "free") +
theme_bw() +
geom_line(color = "grey33") +
geom_point(size = 3) +
ylim(-3,3) +
scale_color_manual(values = c("Ehu" = "#F26739",
"Gindai" = "#EF3E24",
"Hapuupuu" = "#680B10",
"Kalekale" = "#A91E23",
"Lehi" = "#D12027",
"Onaga" = "#F15B26",
"Opakapaka" = "#F47B50"),
guide = "none") +
labs(x = "BFISH Survey Year", y = "CV of CPUE") +
theme(axis.text = element_text(size = 9, angle = 90),
axis.title = element_text(size=12,
face = "bold"),
axis.title.y = element_text(margin = margin(r=5)))
View(cg.6)
View(cg.7)
ggplot(data = cg.7, aes(x = as.factor(YEAR), y = CV_CPUE, group = 1, color = COMMON_NAME)) +
geom_hline(linetype = "longdash", yintercept = 0, size = 0.5, color = "black") +
facet_grid(COMMON_NAME ~ ., scales = "free") +
theme_bw() +
geom_line(color = "grey33") +
geom_point(size = 3) +
ylim(-3,3) +
scale_color_manual(values = c("Ehu" = "#F26739",
"Gindai" = "#EF3E24",
"Hapuupuu" = "#680B10",
"Kalekale" = "#A91E23",
"Lehi" = "#D12027",
"Onaga" = "#F15B26",
"Opakapaka" = "#F47B50"),
guide = "none") +
labs(x = "BFISH Survey Year", y = "CV of CPUE") +
theme(axis.text = element_text(size = 9, angle = 90),
axis.title = element_text(size=12,
face = "bold"),
axis.title.y = element_text(margin = margin(r=5)))
ggplot(data = cg.7, aes(x = as.factor(YEAR), y = CV_CPUE, group = 1, color = COMMON_NAME)) +
geom_hline(linetype = "longdash", yintercept = 0, size = 0.5, color = "black") +
facet_grid(COMMON_NAME ~ ., scales = "free") +
theme_bw() +
geom_line(color = "grey33") +
geom_point(size = 3) +
#ylim(-3,3) +
scale_color_manual(values = c("Ehu" = "#F26739",
"Gindai" = "#EF3E24",
"Hapuupuu" = "#680B10",
"Kalekale" = "#A91E23",
"Lehi" = "#D12027",
"Onaga" = "#F15B26",
"Opakapaka" = "#F47B50"),
guide = "none") +
labs(x = "BFISH Survey Year", y = "CV of CPUE") +
theme(axis.text = element_text(size = 9, angle = 90),
axis.title = element_text(size=12,
face = "bold"),
axis.title.y = element_text(margin = margin(r=5)))
ggplot(data = cg.7, aes(x = as.factor(YEAR), y = CV_CPUE, group = 1, color = COMMON_NAME)) +
geom_hline(linetype = "longdash", yintercept = 0, size = 0.5, color = "black") +
facet_grid(COMMON_NAME ~ ., scales = "free") +
theme_bw() +
geom_line(color = "grey33") +
geom_point(size = 3) +
ylim(0,100) +
scale_color_manual(values = c("Ehu" = "#F26739",
"Gindai" = "#EF3E24",
"Hapuupuu" = "#680B10",
"Kalekale" = "#A91E23",
"Lehi" = "#D12027",
"Onaga" = "#F15B26",
"Opakapaka" = "#F47B50"),
guide = "none") +
labs(x = "BFISH Survey Year", y = "CV of CPUE") +
theme(axis.text = element_text(size = 9, angle = 90),
axis.title = element_text(size=12,
face = "bold"),
axis.title.y = element_text(margin = margin(r=5)))
ggplot(data = cg.7, aes(x = as.factor(YEAR), y = CV_CPUE, group = 1, color = COMMON_NAME)) +
geom_hline(linetype = "longdash", yintercept = 0, size = 0.5, color = "black") +
facet_grid(COMMON_NAME ~ ., scales = "free") +
theme_bw() +
geom_line(color = "grey33") +
geom_point(size = 3) +
ylim(0,90) +
scale_color_manual(values = c("Ehu" = "#F26739",
"Gindai" = "#EF3E24",
"Hapuupuu" = "#680B10",
"Kalekale" = "#A91E23",
"Lehi" = "#D12027",
"Onaga" = "#F15B26",
"Opakapaka" = "#F47B50"),
guide = "none") +
labs(x = "BFISH Survey Year", y = "CV of CPUE") +
theme(axis.text = element_text(size = 9, angle = 90),
axis.title = element_text(size=12,
face = "bold"),
axis.title.y = element_text(margin = margin(r=5)))
View(cg.7)
View(d7.biomass.total)
#getting list of data files(regex and location may have to be changed based on naming convention and data access)
cv.total<-as.list(dir(pattern = ".*Deep7 Biomass Total.*", path = "~/Bottomfish/Bottomfish Project/BFISH/BFISH Data/Data Analysis/[R]/BFISH 2020-present Data Analysis/WORKING/", full.names = T))
View(cv.total)
cv.total <- cv.total %>%
# read in all of the csv's in the files list
purrr::map_dfr(read_csv)
library(tidyverse)
cv.total <- cv.total %>%
# read in all of the csv's in the files list
purrr::map_dfr(read_csv)
View(cv.total)
cv.total<-as.list(dir(pattern = ".*Deep7 Biomass Total.*", path = "~/Bottomfish/Bottomfish Project/BFISH/BFISH Data/Data Analysis/[R]/BFISH 2020-present Data Analysis/WORKING/", full.names = T))
cv.total <- cv.total %>%
# read in all of the csv's in the files list
purrr::map_dfr(read_csv)
View(cv.total)
View(cg.7)
View(cv.total)
names(cv.total)
ggplot(data = cv.total, aes(x = as.factor(YEAR), y = CV_Biomass_kg, group = 1,)) +
geom_hline(linetype = "longdash", yintercept = 0, size = 0.5, color = "black") +
#facet_grid(COMMON_NAME ~ ., scales = "free") +
theme_bw() +
geom_line(color = "grey33") +
geom_point(size = 3) +
ylim(0,90) +
# scale_color_manual(values = c("Ehu" = "#F26739",
#                               "Gindai" = "#EF3E24",
#                               "Hapuupuu" = "#680B10",
#                               "Kalekale" = "#A91E23",
#                               "Lehi" = "#D12027",
#                               "Onaga" = "#F15B26",
#                               "Opakapaka" = "#F47B50"),
#                    guide = "none") +
labs(x = "BFISH Survey Year", y = "CV of Biomass (kg)") +
theme(axis.text = element_text(size = 9, angle = 90),
axis.title = element_text(size=12,
face = "bold"),
axis.title.y = element_text(margin = margin(r=5)))
ggplot(data = cv.total, aes(x = as.factor(YEAR), y = CV_Biomass_kg, group = 1,)) +
geom_hline(linetype = "longdash", yintercept = 0, size = 0.5, color = "black") +
#facet_grid(COMMON_NAME ~ ., scales = "free") +
theme_bw() +
geom_line(color = "grey33") +
geom_point(size = 3) +
ylim(0,25) +
# scale_color_manual(values = c("Ehu" = "#F26739",
#                               "Gindai" = "#EF3E24",
#                               "Hapuupuu" = "#680B10",
#                               "Kalekale" = "#A91E23",
#                               "Lehi" = "#D12027",
#                               "Onaga" = "#F15B26",
#                               "Opakapaka" = "#F47B50"),
#                    guide = "none") +
labs(x = "BFISH Survey Year", y = "CV of Biomass (kg)") +
theme(axis.text = element_text(size = 9, angle = 90),
axis.title = element_text(size=12,
face = "bold"),
axis.title.y = element_text(margin = margin(r=5)))
ggplot(data = cv.total, aes(x = as.factor(YEAR), y = CV_Biomass_kg, group = 1,)) +
geom_hline(linetype = "longdash", yintercept = 0, size = 0.5, color = "black") +
#facet_grid(COMMON_NAME ~ ., scales = "free") +
theme_bw() +
geom_line(color = "grey33") +
geom_point(size = 3) +
ylim(10,25) +
# scale_color_manual(values = c("Ehu" = "#F26739",
#                               "Gindai" = "#EF3E24",
#                               "Hapuupuu" = "#680B10",
#                               "Kalekale" = "#A91E23",
#                               "Lehi" = "#D12027",
#                               "Onaga" = "#F15B26",
#                               "Opakapaka" = "#F47B50"),
#                    guide = "none") +
labs(x = "BFISH Survey Year", y = "CV of Biomass (kg)") +
theme(axis.text = element_text(size = 9, angle = 90),
axis.title = element_text(size=12,
face = "bold"),
axis.title.y = element_text(margin = margin(r=5)))
ggplot(data = cv.total, aes(x = as.factor(YEAR), y = CV_Biomass_kg, group = 1,)) +
geom_hline(linetype = "longdash", yintercept = 0, size = 0.5, color = "black") +
theme_bw() +
geom_line(color = "grey33") +
geom_point(size = 3) +
ylim(10,25) +
labs(x = "BFISH Survey Year", y = "Deep 7 Complex CV of Biomass (kg)") +
theme(axis.text = element_text(size = 9, angle = 90),
axis.title = element_text(size=12,
face = "bold"),
axis.title.y = element_text(margin = margin(r=5)))
ggplot(data = cv.total, aes(x = as.factor(YEAR), y = CV_Biomass_kg, group = 1,)) +
geom_hline(linetype = "longdash", yintercept = 0, size = 0.5, color = "black") +
theme_bw() +
geom_line(color = "grey33") +
geom_point(size = 3, color = "#F26739") +
ylim(10,25) +
labs(x = "BFISH Survey Year", y = "Deep 7 Complex CV of Biomass (kg)") +
theme(axis.text = element_text(size = 9, angle = 90),
axis.title = element_text(size=12,
face = "bold"),
axis.title.y = element_text(margin = margin(r=5)))
ggsave("BFISH Deep 7 CV by Year.pdf", width = 8.5, height = 11, units = "in")
ggsave("BFISH Deep 7 CV by Year.png", width = 8.5, height = 11, units = "in")
setwd("~/Bottomfish/Bottomfish Project/BFISH/BFISH Data/Data Analysis/[R]/BFISH 2020-present Data Analysis/WORKING")
ggsave("BFISH Deep 7 CV by Year.pdf", width = 11, height = 8.5, units = "in")
ggsave("BFISH Deep 7 CV by Year.png", width = 11, height = 8.5, units = "in")
